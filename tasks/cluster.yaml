# Deploy Ceph Cluster

# Create the common resources

- name: Rook - Make directory to hold temp files
  file: 
    path: "/root/ansible_rook_role/"
    state: directory

- name: Rook - Create cluster.yaml file from template
  template: 
     src: cluster.yaml.j2
     dest: "/root/ansible_rook_role/cluster.yaml"


- name: ROOK - Define RBAC and Create the ceph cluster
  k8s:
    kubeconfig: "{{ kubeconfig_file_path | default(omit) }}"
    state: present
    src: "/root/ansible_rook_role/cluster.yaml"
  register: ret
  until: not ret.failed or ret.get('rc') != 0 or ret.get('status') != 200
  retries: "{{ k8s_task_retries | default(3) }}"
  delay: "{{ k8s_task_delay | default(15) }}"
  tags: deploy_cluster

- name: Rook - Create toolbox.yaml file from template
  template:
     src: toolbox.yaml.j2
     dest: "/root/ansible_rook_role/toolbox.yaml"

- name: ROOK - Deploy Ceph toolbox
  k8s:
    kubeconfig: "{{ kubeconfig_file_path | default(omit) }}"
    state: present
    src: "/root/ansible_rook_role/toolbox.yaml"
    force: yes
  register: ret
  until: not ret.failed or ret.get('rc') != 0 or ret.get('status') != 200
  retries: "{{ k8s_task_retries | default(3) }}"
  delay: "{{ k8s_task_delay | default(15) }}"
  tags: deploy_cluster

- name: ROOK - Verify the cluster deploy is complete
  k8s:
    kubeconfig: "{{ kubeconfig_file_path | default(omit) }}"
    api_version: ceph.rook.io/v1
    kind: CephCluster
    name: rook-ceph
    namespace: "{{ rook_cluster_namespace }}"
  register: cluster_data
  until: cluster_data.get('result', {}).get('status', {}).get('state') == "Created"
  retries: "{{ k8s_task_retries | default(3) }}"
  delay: "{{ k8s_task_delay | default(15) }}"
  ignore_errors: yes
  tags: deploy_cluster
